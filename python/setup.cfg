# Copyright (c) 2019-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

[versioneer]
VCS = git
style = pep440
versionfile_source = cusignal/_version.py
versionfile_build = cusignal/_version.py
tag_prefix = v
parentdir_prefix = cusignal-

[flake8]
exclude = docs, __init__.py, versioneer.py
max-line-length = 88
ignore =
    # line break before binary operator
    W503
    # line break after binary operator
    W504
    # whilespace before :
    E203

[isort]
line_length=88
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
combine_as_imports=True
order_by_type=True
known_rapids=
    rmm
    cuml
    cugraph
    dask_cudf
    cudf
    ucp
known_first_party=
    cusignal
default_section=THIRDPARTY
sections=FUTURE,STDLIB,THIRDPARTY,RAPIDS,FIRSTPARTY,LOCALFOLDER
skip=
    .eggs
    .git
    .hg
    .mypy_cache
    .tox
    .venv
    build
    dist
    __init__.py
    versioneer.py

[tool:pytest]
addopts = 
	--benchmark-sort=mean
	--benchmark-min-rounds=25
	--benchmark-warmup=on 
	--benchmark-warmup-iterations=10 
	--benchmark-disable-gc
	--benchmark-disable
	--strict-markers
markers =
	cpu: marks tests as cpu functions (deselect with '-m "not cpu"')
